definput party 1 a_vec: array[4] int magnitude = 255;

defun gf_mult( int a, int b ):
  a_copy = a;
  b_copy = b;
  p = 0;
  loop i from 0 to bit_width(b_copy):
    if select( b_copy, 0, 1 ) equals 1:
      p = p ^ a_copy;
    end
    b_copy = b_copy >> 1;
    carry = select( a_copy, 7, 8 );
    a_copy = trunc( a_copy << 1, 8 );
    if carry equals 1:
       a_copy = a_copy ^ 0x1b;
    end
  end
  return p;
end    

mix_cols =
[ 2, 3, 1, 1,
  1, 2, 3, 1,
  1, 1, 2, 3,
  3, 1, 1, 2 ];

defun mix_cols( Array a ):
  out = [ 0, 0, 0, 0 ];
  loop row from 0 to 4:
    temp = 0;
    loop col from 0 to 4:
      temp = temp ^ gf_mult( a[col], mix_cols[ (row << 2) + col ] );
    end
    out[row] = temp;
  end
  return out;
end

out = mix_cols(a_vec);
out_a = out[0];
out_b = out[1];
out_c = out[2];
out_d = out[3];

defoutput out;
defoutput out_a;
defoutput out_b;
defoutput out_c;
defoutput out_d;